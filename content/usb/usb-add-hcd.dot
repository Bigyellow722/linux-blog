digraph {
    rankdir=LR;
    node [ shape=record ];

    __usb_create_hcd -> "kzalloc for struct hcd";
    __usb_create_hcd -> "initialize address0_metux and bandwidth_mutex";
    __usb_create_hcd -> usb_bus_init;
    __usb_create_hcd -> "timer_setup(rh_timer_func)";
    __usb_create_hcd -> "INIT_WORK(&hcd->wakeup_work, hcd_resume_work)";
    __usb_create_hcd -> "INIT_WORK(&hcd->died_work, hcd_died_work)";
    
    usb_add_hcd -> usb_phy_roothub_alloc;
    usb_add_hcd -> usb_phy_roothub_init;
    usb_add_hcd -> usb_phy_roothub_set_mode;
    usb_add_hcd -> usb_phy_roothub_power_on;
    usb_add_hcd -> hcd_buffer_create;
    usb_add_hcd -> usb_register_bus;
    usb_add_hcd -> usb_alloc_dev;
    usb_add_hcd -> "hcd->driver->reset";
    usb_add_hcd -> usb_phy_roothub_calibrate;
    usb_add_hcd -> "init_giveback_urb_bh(&hcd->high_prio_bh)";
    usb_add_hcd -> "init_giveback_urb_bh(&hcd->low_prio_bh)";
    usb_add_hcd -> usb_hcd_request_irqs;
    usb_add_hcd -> "hcd->driver->start";
    usb_add_hcd -> register_root_hub;
    usb_add_hcd -> usb_hcd_poll_rh_status;
}
